# IAM Service Configuration for Docker Environment
server.port=8080
spring.application.name=iam-service

# Database Configuration (PostgreSQL)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://iam-db:5432/ecomovil_iam_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:iam_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:iam_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# JWT Configuration
authorization.jwt.secret=${JWT_SECRET:mySecretKeyThatIsLongEnoughForJWTHMACAlgorithmRequirements1234567890}
authorization.jwt.expiration.days=7

# Logging Configuration
logging.level.upc.edu.ecomovil.microservices.iam=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.root=INFO

# AWS Configuration for LocalStack
aws.region=${AWS_REGION:us-east-1}
aws.sns.endpoint=${AWS_SNS_ENDPOINT:http://localstack:4566}

# Actuator endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.db.enabled=true

# Logging
logging.level.upc.edu.ecomovil.microservices.iam=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Security
server.error.include-message=always
server.error.include-binding-errors=always
